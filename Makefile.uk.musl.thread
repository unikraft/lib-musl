LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/src/internal/atomic.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/ctype.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/dirent.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/src/internal/dynlink.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/elf.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/errno.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/fcntl.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/src/internal/futex.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/src/internal/libc.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/limits.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/pthread.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/src/internal/pthread_impl.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/semaphore.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/signal.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/stdarg.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/stddef.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/stdint.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/stdio.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/src/internal/stdio_impl.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/stdlib.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/string.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/src/internal/syscall.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/sys/mman.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/sys/prctl.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/sys/stat.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/sys/syscall.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/threads.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/time.h
LIBMUSL_THREAD_HDRS-y += $(LIBMUSL)/include/unistd.h

LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/call_once.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/cnd_broadcast.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/cnd_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/cnd_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/cnd_signal.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/cnd_timedwait.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/cnd_wait.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/default_attr.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/__lock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/lock_ptc.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/mtx_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/mtx_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/mtx_lock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/mtx_timedlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/mtx_trylock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/mtx_unlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_atfork.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_attr_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_attr_get.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_attr_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_attr_setdetachstate.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_attr_setguardsize.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_attr_setinheritsched.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_attr_setschedparam.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_attr_setschedpolicy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_attr_setscope.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_attr_setstack.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_attr_setstacksize.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_barrierattr_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_barrierattr_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_barrierattr_setpshared.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_barrier_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_barrier_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_barrier_wait.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_cancel.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_cleanup_push.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_condattr_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_condattr_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_condattr_setclock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_condattr_setpshared.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_cond_broadcast.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_cond_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_cond_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_cond_signal.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_cond_timedwait.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_cond_wait.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_create.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_detach.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_equal.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_getattr_np.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_getconcurrency.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_getcpuclockid.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_getname_np.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_getschedparam.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_getspecific.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_join.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_key_create.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_kill.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutexattr_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutexattr_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutexattr_setprotocol.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutexattr_setpshared.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutexattr_setrobust.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutexattr_settype.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutex_consistent.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutex_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutex_getprioceiling.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutex_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutex_lock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutex_setprioceiling.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutex_timedlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutex_trylock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_mutex_unlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_once.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlockattr_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlockattr_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlockattr_setpshared.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlock_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlock_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlock_rdlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlock_timedrdlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlock_timedwrlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlock_tryrdlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlock_trywrlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlock_unlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_rwlock_wrlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_self.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_setattr_default_np.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_setcancelstate.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_setcanceltype.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_setconcurrency.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_setname_np.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_setschedparam.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_setschedprio.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_setspecific.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_sigmask.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_spin_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_spin_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_spin_lock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_spin_trylock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_spin_unlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/pthread_testcancel.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/sem_destroy.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/sem_getvalue.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/sem_init.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/sem_open.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/sem_post.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/sem_timedwait.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/sem_trywait.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/sem_unlink.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/sem_wait.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/synccall.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/__syscall_cp.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/thrd_create.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/thrd_exit.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/thrd_join.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/thrd_sleep.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/thrd_yield.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/__timedwait.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/tls.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/__tls_get_addr.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/tss_create.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/tss_delete.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/tss_set.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/vmlock.c
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/__wait.c


ifeq (x86_32,$(CONFIG_UK_ARCH))
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/i386/clone.s|i386
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/i386/syscall_cp.s|i386
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/i386/tls.s|i386
else ifeq (x86_64,$(CONFIG_UK_ARCH))
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/x86_64/clone.s|x86_64
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/x86_64/syscall_cp.s|x86_64
else ifeq (arm,$(CONFIG_UK_ARCH))
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/arm/__aeabi_read_tp.s|arm
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/arm/__aeabi_read_tp_c.c|arm
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/arm/atomics.s|arm
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/arm/clone.s|arm
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/arm/syscall_cp.s|arm
else ifeq (arm64,$(CONFIG_UK_ARCH))
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/aarch64/__unmapself.s|aarch64
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/aarch64/clone.s|aarch64
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/aarch64/syscall_cp.s|aarch64
else ifeq (riscv64,$(CONFIG_UK_ARCH))
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/riscv64/clone.s|riscv64
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/riscv64/syscall_cp.s|riscv64
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/riscv64/__unmapself.s|riscv64
else
LIBMUSL_THREAD_SRCS-y += $(LIBMUSL)/src/thread/clone.c|thread
endif


$(eval $(call _libmusl_import_lib,thread,$(LIBMUSL_THREAD_HDRS-y),$(LIBMUSL_THREAD_SRCS-y)))
